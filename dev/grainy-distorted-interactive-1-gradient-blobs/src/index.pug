- let d = 400;
- let grad = [
- 	['#ff6cab', '#7366ff'], 
- 	['#2e8de1', '#b65eba'], 
- 	['#8a64eb', '#64e8de'], 
- 	['#e65eab', '#7bf2e9'], 
- 	['#7d77ff', '#ff9482'], 
- 	['#ff661b', '#ffcf1b'], 
- 	['#ea4d2c', '#ffa62e'], 
- 	['#00ff54', '#00b8ba'], 
- 	['#6454f0', '#6ee2f5'], 
- 	['#3499ff', '#3a3985'], 
- 	['#f630a0', '#ff9897'], 
- 	['#ee4d5f', '#ffcda5'], 
- 	['#8441a4', '#ff5b94'], 
- 	['#f869d5', '#5650de'], 
- 	['#00bd56', '#f9fd50'], 
- 	['#c7004c', '#ffaaaa'], 
- 	['#fff6a2', '#fc8a15']
- ]
- let n = grad.length, r = .5*d;

body(style=`--d: ${d}px`)
	svg(width='0' height='0' aria-hidden='true')
		//- distort gradient shape (relative to distorted input d)
		filter#distort(primitiveUnits='objectBoundingBox' 
									 x='-50%' y='-50%' width='200%' height='200%')
			feTurbulence(type='fractalNoise' baseFrequency='.00713' seed='5')
			feDisplacementMap(in='SourceGraphic' scale='.3' yChannelSelector='R')
		//- make gradient grainy (absolute, in px)
		filter#grain(x='-50%' y='-50%' width='200%' height='200%')
			feTurbulence(type='fractalNoise' baseFrequency='7.13')
			feDisplacementMap(in='SourceGraphic' scale=.09*d yChannelSelector='R')
	section.intro
		h1 Grainy distorted gradient blobs
		p Each distorted blob starts out as a 
			code circle
			| , 
			a(href='https://css-tricks.com/tight-fitting-svg-shapes/' target='_blank') tightly fit
			|  inside its parent 
			code svg
			|  element (which has its 
			code viewBox
			|  set such that its 
			code 0,0
			|  point 
			a(href='https://bsky.app/profile/anatudor.bsky.social/post/3ljb65y7wns2o' target='_blank') is dead in the middle
			| ). This circle then gets a 
			code radialGradient
			|  fill. Choosing the SVG radial gradient over the CSS one because it 
			a(href='https://svgwg.org/svg2-draft/pservers.html#RadialGradientElement' target='_blank') also allows
			|  setting focal point coordinates (
			code fx,fy
			| ) distinct from 
			code cx,cy
			|  - hover any blob to see how its focal point follows the cursor.
		pre
			span.line
				span.tkn--punc &lt;
				span.tkn--elem radialGradient
				|  
				span.tkn--attr id
				span.tkn--punc =
				span.tkn--str 'g'
				|  
				span.tkn--attr gradientUnits
				span.tkn--punc =
				span.tkn--str 'objectBoundingBox'
				|  
				span.tkn--attr fx
				span.tkn--punc =
				span.tkn--str '.35'
				|  
				span.tkn--attr fy
				span.tkn--punc =
				span.tkn--str '.65'
				span.tkn--punc >
			.blck
				span.line
					span.tkn--punc &lt;
					span.tkn--elem stop
					|  
					span.tkn--attr stop-color
					span.tkn--punc =
					span.tkn--str 'var(--c0)'
					span.tkn--punc />
				span.line
					span.tkn--punc &lt;
					span.tkn--elem stop
					|  
					span.tkn--attr stop-color
					span.tkn--punc =
					span.tkn--str 'var(--c1)'
					|  
					span.tkn--attr offset
					span.tkn--punc =
					span.tkn--str '.5'
					span.tkn--punc />
				span.line
					span.tkn--punc &lt;
					span.tkn--elem stop
					|  
					span.tkn--attr stop-color
					span.tkn--punc =
					span.tkn--str 'rgba(from var(--c1) r g b/ 0)'
					|  
					span.tkn--attr offset
					span.tkn--punc =
					span.tkn--str '1'
					span.tkn--punc />
			span.line
				span.tkn--punc &lt;/
				span.tkn--elem radialGradient
				span.tkn--punc >
		p The 
			code circle
			|  with the gradient is then blurred, distorted and given a grainy/ dithered look. The last two actions make use of the same concept of altering the input using noise generated by 
			code feTurbulence
			|  as a 
			a(href='https://www.smashingmagazine.com/2021/09/deep-dive-wonderful-world-svg-displacement-filtering/' target='_blank') displacement map
			| . The displacement used for distortion is relative to input size. The noise used for dithering is finer (larger 
			code baseFrequency
			|  value).
		pre
			span.line
				span.tkn--punc &lt;
				span.tkn--elem filter
				|  
				span.tkn--attr id
				span.tkn--punc =
				span.tkn--str 'distort'
				|  
				span.tkn--attr primitiveUnits
				span.tkn--punc =
				span.tkn--str 'objectBoundingBox'
				|  
				span.tkn--attr x
				span.tkn--punc =
				span.tkn--str '-50%'
				|  
				span.tkn--attr y
				span.tkn--punc =
				span.tkn--str '-50%'
				|  
				span.tkn--attr width
				span.tkn--punc =
				span.tkn--str '200%'
				|  
				span.tkn--attr height
				span.tkn--punc =
				span.tkn--str '200%'
				span.tkn--punc >
			.blck
				span.line
					span.tkn--punc &lt;
					span.tkn--elem feTurbulence
					|  
					span.tkn--attr type
					span.tkn--punc =
					span.tkn--str 'fractalNoise'
					|  
					span.tkn--attr baseFrequency
					span.tkn--punc =
					span.tkn--str '.00713'
					span.tkn--punc />
				span.line
					span.tkn--punc &lt;
					span.tkn--elem feDisplacementMap
					|  
					span.tkn--attr in
					span.tkn--punc =
					span.tkn--str 'SourceGraphic'
					|  
					span.tkn--attr scale
					span.tkn--punc =
					span.tkn--str '.3'
					|  
					span.tkn--attr yChannelSelector
					span.tkn--punc =
					span.tkn--str 'R'
					span.tkn--punc />
			span.line
				span.tkn--punc &lt;/
				span.tkn--elem radialGradient
				span.tkn--punc >

			span.line
				span.tkn--punc &lt;
				span.tkn--elem filter
				|  
				span.tkn--attr id
				span.tkn--punc =
				span.tkn--str 'grain'
				|  
				span.tkn--attr x
				span.tkn--punc =
				span.tkn--str '-50%'
				|  
				span.tkn--attr y
				span.tkn--punc =
				span.tkn--str '-50%'
				|  
				span.tkn--attr width
				span.tkn--punc =
				span.tkn--str '200%'
				|  
				span.tkn--attr height
				span.tkn--punc =
				span.tkn--str '200%'
				span.tkn--punc >
			.blck
				span.line
					span.tkn--punc &lt;
					span.tkn--elem feTurbulence
					|  
					span.tkn--attr type
					span.tkn--punc =
					span.tkn--str 'fractalNoise'
					|  
					span.tkn--attr baseFrequency
					span.tkn--punc =
					span.tkn--str '7.13'
					span.tkn--punc />
				span.line
					span.tkn--punc &lt;
					span.tkn--elem feDisplacementMap
					|  
					span.tkn--attr in
					span.tkn--punc =
					span.tkn--str 'SourceGraphic'
					|  
					span.tkn--attr scale
					span.tkn--punc =
					span.tkn--str '32'
					|  
					span.tkn--attr yChannelSelector
					span.tkn--punc =
					span.tkn--str 'R'
					span.tkn--punc />
			span.line
				span.tkn--punc &lt;/
				span.tkn--elem radialGradient
				span.tkn--punc >
	section.samples
		- grad.forEach((c, i) => {
			.blob(style=`--c: light-dark(${c.slice().reverse()})`)
				svg(viewBox=`${-r} ${-r} ${d} ${d}`)
					radialGradient(id=`g${i}` gradientUnits='objectBoundingBox' fx='.25' fy='.75')
						stop(stop-color=`light-dark(${c})`)
						stop(stop-color='var(--c)' offset='.5')
						stop(offset='1')

					circle(r='50%' fill=`url(#g${i})`)
		- })